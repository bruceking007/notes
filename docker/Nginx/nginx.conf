user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
  	server_tokens off; #隐藏版本

    log_format main '$remote_addr - $remote_user [$time_local] "$request $scheme://$host$request_uri" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent"' ' $connection $upstream_addr '
                    'ups_time $upstream_response_time req_time $request_time' 
                    ' $request_body' ' $clientRealIp';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;
		#IP 限制（适用于有配置CDN的域名）
		#1、获取真实的用户ip
   map $http_x_forwarded_for  $clientRealIp {
     "" $remote_addr;
     ~^(?P<firstAddr>[0-9\.]+),?.*$  $firstAddr;
    }

    client_body_temp_path /temp/client_temp;
    proxy_temp_path       /temp/proxy_temp_path;
    fastcgi_temp_path     /temp/fastcgi_temp;
    uwsgi_temp_path       /temp/uwsgi_temp;
    scgi_temp_path        /temp/scgi_temp;

    include /etc/nginx/conf.d/*.conf;
}


stream {
    log_format proxy '$remote_addr [$time_local] '
                 '$protocol $status $bytes_sent $bytes_received '
                 '$session_time "$upstream_addr" '
                 '"$upstream_bytes_sent" "$upstream_bytes_received" "$upstream_connect_time"';
    access_log /var/log/nginx/tcp-access.log proxy ;


    upstream kafka1{
        #hash $remote_addr consistent; # 保持 session 不变,四层开启
        server 10.10.0.220:9092  max_fails=3  fail_timeout=10s;
    }
        server {
        listen 19091;
        proxy_connect_timeout 10s;
        proxy_timeout 30s;
        proxy_pass kafka1;
    }

    upstream kafka2{
        #hash $remote_addr consistent; # 保持 session 不变,四层开启
        server 10.10.0.250:9092  max_fails=3  fail_timeout=10s;
    }
        server {
        listen 19092;
        proxy_connect_timeout 10s;
        proxy_timeout 30s;
        proxy_pass kafka2;
    }

    upstream kafka3{
        #hash $remote_addr consistent; # 保持 session 不变,四层开启
        server 10.10.0.134:9092  max_fails=3  fail_timeout=10s;
    }
        server {
        listen 19093;
        proxy_connect_timeout 10s;
        proxy_timeout 30s;
        proxy_pass kafka3;
    }
}
