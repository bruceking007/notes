#### 备份源数据库

```
mysqldump -h192.168.21.26 -P3306 -uroot -p<password> --skip-add-drop-table --skip-extended-insert --databases idk_base > hezhong_idk_base.sql
```

- –skip-add-drop-table 这个参数为了不在sql文件里面增加drop语句，不加的话，执行这个sql会先将表删掉，再重新创建。
- –skip-extended-insert 导出的sql一个insert对应一条数据。

##### 库名不一致如何修改

两个环境库名不一致， 需要修改sql里面的库名， sql文件又太大， 选择使用sed命令来修改

```
sed -e 's/USE `idk_base`;/USE `db_idk_base`;/g;' -i hezhong_idk_base.sql
```





 ### 导出带建库的语句 --database

备份单个数据库

```mysql
 mysqldump -uroot -p -h 192.168.1.39 --database yearning > yearning.sql
```



### 导出db1、db2两个数据库的所有数据--databases

参数后面所有名字参量都被看作数据库名

```mysql
mysqldump -uroot -p --databases db1 db2 >/tmp/user.sql
```



### [mysqldump 导出数据库各参数详细说明](https://srebro.cn/203/)

```
mysqldump是mysql用于转存储数据库的实用程序。它主要产生一个SQL脚本，其中包含从头重新创建数据库所必需的命令CREATE TABLE INSERT等。

下面我们详细介绍一下mysqldump导出的各种实例：

 

1 导出一个数据库的结构（只有结构，不含创建数据库语句）

mysqldump -d dbname -uroot -p > dbname.sql

2 导出多个数据库的结构（只有结构，不含创建数据库语句）

mysqldump -d -B dbname1 dbname2 -uroot -p > dbname.sql

3 导出一个数据库中数据（不包含结构，只有数据）

mysqldump -t dbname -uroot -p > dbname.sql

4 导出多个数据库中数据（不包含结构，只有数据）

mysqldump -t -B dbname1 dbname2 -uroot -p > dbname.sql

5 导出一个数据库的结构以及数据（含结构和数据）

mysqldump dbname -uroot -p > dbname.sql

6 导出多个数据库的结构以及数据（含结构和数据）

mysqldump -B dbname1 dbname2 -uroot -p > dbname.sql

7 导出一个数据库中一个表的结构

mysqldump -d dbname1 tablename -uroot -p > tablename.sql

8 导出一个数据库中多个表的结构

mysqldump -d -B dbname1 –tables tablename1 tablename2 -uroot -p > tablename.sql

9 导出一个数据库中一个表的数据（不包含结构）

mysqldump -t dbname1 tablename -uroot -p > tablename.sql

10 导出一个数据库中多个表的数据（不包含结构）

mysqldump -t -B dbname1 –tables tablename1 tablename2 -uroot -p > tablename.sql

11 导出一个数据库中一个表的结构以及数据

mysqldump dbname1 tablename -uroot -p > tablename.sql

12 导出一个数据库中多个表的结构以及数据

mysqldump -B dbname1 –tables tablename1 tablename2 -uroot -p > tablename.sql

 

存储过程&函数操作
1 只导出存储过程和函数(不导出结构和数据，要同时导出结构的话，需要同时使用-d)

mysqldump -R -ndt dbname -u root -p > dbname.sql

2 只导出事件

mysqldump -E -ndt dbname -u root -p > dbname.sql

3 不导出触发器（触发器是默认导出的–triggers，使用–skip-triggers屏蔽导出触发器）

mysqldump –skip-triggers dbname1 -u root -p > dbname.sql

 

把导出的数据导入到数据库

mysql -u root -p
use dbname;
source dbname.sql
 
总结一下：
-d 结构(–no-data:不导出任何数据，只导出数据库表结构)
-t 数据(–no-create-info:只导出数据，而不添加CREATE TABLE 语句)

-n (–no-create-db:只导出数据，而不添加CREATE DATABASE 语句）

-R (–routines:导出存储过程以及自定义函数)

-E (–events:导出事件)

–triggers (默认导出触发器，使用–skip-triggers屏蔽导出)

-B (–databases:导出数据库列表，单个库时可省略）

–tables 表列表（单个表时可省略）

①同时导出结构以及数据时可同时省略-d和-t
②同时 不 导出结构和数据可使用-ntd
③只导出存储过程和函数可使用-R -ntd
④导出所有(结构&数据&存储过程&函数&事件&触发器)使用-R -E(相当于①，省略了-d -t;触发器默认导出)
⑤只导出结构&函数&事件&触发器使用 -R -E -d
```





### mysql备份

```
建议使用 --single-transaction 参数来获得一致性备份，减少锁表。
按需求来导出，只要自己想要的数据，尽量减少导出文件大小。
若想用于搭建从库，建议使用 --master-data = 2 参数记录主库 binlog 信息。
若想备份存储过程、自定义函数及事件，请加 -R -E 参数，此二者默认不开启。
不了解的参数不要随意加，按默认即可。
```



```
# 备份全部数据库（包含存储过程、自定义函数及事件） 
mysqldump -uroot -pxxxxxx --single-transaction -R -E --all-databases > /tmp/all_database.sql 
 
# 要求记录 binlog 位点信息 可用于搭建从库 
mysqldump -uroot -pxxxxxx --single-transaction -R -E --all-databases --master-data=2 > /tmp/all_database.sql 
 
# 备份指定数据库(带结构和数据)
mysqldump -uroot -pxxxxxx --single-transaction -R -E --databases db1 > /tmp/db1.sql
mysqldump -uroot -pxxxxxx --single-transaction -R -E --databases db1 db2 > /tmp/db1_db2.sql
 
# 备份部分表 (带结构和数据)
mysqldump -uroot -pxxxxxx --single-transaction db1 tb1 > /tmp/tb1.sql 
mysqldump -uroot -pxxxxxx --single-transaction db1 tb1 tb2 tb3 > /tmp/tb.sql 
 
# 导出某个表，数据以单行insert显示 (带结构和数据)
mysqldump -uroot -pxxxxxx --single-transaction --skip-extended-insert db1 tb1 > /tmp/tb1.sql 
 
# 导出单表的部分数据 
mysqldump -uroot -pxxxxxx --single-transaction db1 tb1 --where=" create_time >= '2021-06-01 00:00:00' " > /tmp/tb1.sql 
mysqldump -uroot -pxxxxxx --single-transaction db1 tb1 --where='id < 10' > /tmp/tb1.sql 
 
# 排除某些表导出 
mysqldump -uroot -pxxxxxx --single-transaction --databases db1 --ignore-table=db1.tb1 --ignore-table=db1.tb2 > /tmp/db1.sql 
 
# 只导出结构或只导出数据 
mysqldump -uroot -pxxxxxx db1 --no-data > /tmp/db1_jiegou.sql  #(只有结构)
mysqldump -uroot -pxxxxxx db1 --no-create-info > /tmp/db1_data.sql   #(只有数据)
 
# 只导出某个库的存储过程及自定义函数 
mysqldump -uroot -pxxxxxx -d -t -R db1 > /tmp/db1_routine.sql 
 
# 远程导出 即MySQL服务端不在本地 
mysqldump -uroot -pxxxxxx -hxxx.xxx.xx -P3306 --single-transaction --databases db1 > /tmp/db1.sql 
```

